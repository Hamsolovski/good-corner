services:
  server:
    container_name: tgc-back
    build: ./backend
    command: sh -c "CHOKIDAR_USEPOLLING=true npm run start"
    volumes:
      - ./backend/src/:/app/src/
    environment: 
      DB_PASSWORD: ${DB_PASSWORD}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}

      JWT_SECRET: ${JWT_SECRET}
      BACKEND_PORT: ${BACKEND_PORT}

  client:
    container_name: tgc-front
    build: ./frontend
    command: sh -c "CHOKIDAR_USEPOLLING=true npm run dev"
    volumes:
      - ./frontend/src/:/app/src/
    environment:
      VITE_GATEWAY_PORT: ${GATEWAY_PORT}

  database:
    container_name: tgc-db
    image: postgres
    volumes: 
      - ./persist/data/:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_SCHEMA}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_HOST: ${DB_HOST}

  vizualizer:
    container_name: tgc-db-viz
    image: adminer

  gateway:
    container_name: tgc-gateway
    image: nginx
    ports: 
      - ${GATEWAY_PORT}:80
    volumes:
      - ./nginx.dev.conf:/etc/nginx/conf.d/dev.conf.template
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
    command: /bin/bash -c "envsubst '$$BACKEND_PORT' < /etc/nginx/conf.d/dev.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"